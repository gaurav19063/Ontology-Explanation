######################################################################
Ontology name: DSA_04092015.owl
######################################################################
#############################All the classes with subclasses ###############################
CONNECTED_GRAPH (SubclassOf) GRAPH
CONVEX_HULL_ALGORITHM (SubclassOf) ALGORITHM
SINGLY_LINKED_LIST_NODE (SubclassOf) LIST_NODE
BINARY_HEAP (SubclassOf) HEAP
TABLE (SubclassOf) ADT
FLOW_NETWORK_ALGORITHM (SubclassOf) ALGORITHM
DISJOINT_SET (SubclassOf) ADT
CHILD_NODE (SubclassOf) GRAPH_NODE
DISCONNECTED_GRAPH (SubclassOf) GRAPH
GRAPH (SubclassOf) ADT
TREE (SubclassOf) GRAPH
TREE_OPERATION (SubclassOf) GRAPH_OPERATION
HEAP_OPERATION (SubclassOf) GRAPH_OPERATION
LIST_NODE (SubclassOf) NODE
MUTABLE_SET (SubclassOf) SET
ROOT_NODE (SubclassOf) GRAPH_NODE
STATIC_SET (SubclassOf) SET
FIBONACCI_HEAP (SubclassOf) MERGEABLE_HEAP
VECTOR (SubclassOf) ADT
STRING_MATCHING_ALGORITHM (SubclassOf) ALGORITHM
BINOMIAL_TREE (SubclassOf) TREE
HEAP (SubclassOf) GRAPH
DOUBLY_LINKED_LIST_NODE (SubclassOf) LIST_NODE
BINOMIAL_HEAP (SubclassOf) MERGEABLE_HEAP
CYCLIC_GRAPH (SubclassOf) GRAPH
SET (SubclassOf) ADT
CONTINOUS_STORAGE (SubclassOf) STORAGE
BINARY_TREE (SubclassOf) TREE
SEQUENCE_SEARCH_ALGORITHM (SubclassOf) ALGORITHM
WEIGHTED_EDGE (SubclassOf) EDGE
LOOP (SubclassOf) EDGE
SEQUENTIAL_ACCESS_STYLE (SubclassOf) ACCESS_STYLE
ALL_PAIRS_SHORTEST_PATH_ALGORITHM (SubclassOf) SHORTEST_PATH_ALGORITHM
TREE (SubclassOf) CONNECTED_GRAPH
MERGEABLE_HEAP (SubclassOf) HEAP
SHORTEST_PATH_ALGORITHM (SubclassOf) ALGORITHM
HEAP (SubclassOf) ACYCLIC_GRAPH
INTERNAL_SORTING_ALGORITHM (SubclassOf) SORTING_ALGORITHM
UNDIRECTED_GRAPH (SubclassOf) GRAPH
QUEUE (SubclassOf) ADT
SINGLE_PAIR_SHORTEST_PATH_ALGORITHM (SubclassOf) SHORTEST_PATH_ALGORITHM
PARENT_NODE (SubclassOf) GRAPH_NODE
GRAPH_OPERATION (SubclassOf) OPERATION
HASH_TABLE (SubclassOf) DICTIONARY
RANDOM_ACCESS_STYLE (SubclassOf) ACCESS_STYLE
HASH_MAP (SubclassOf) DICTIONARY
LINKED_STORAGE (SubclassOf) STORAGE
DOUBLY_LINKED_LIST (SubclassOf) LIST
INTERNAL_NODE (SubclassOf) GRAPH_NODE
FILE (SubclassOf) ADT
ARRAY_OPERATION (SubclassOf) OPERATION
SIBLING_NODE (SubclassOf) GRAPH_NODE
MINIMUM_SPANNING_TREE_ALGORITHM (SubclassOf) ALGORITHM
UNWEIGHTED_EDGE (SubclassOf) EDGE
HEAP (SubclassOf) CONNECTED_GRAPH
GRAPH_SEARCH_ALGORITHM (SubclassOf) ALGORITHM
LIST (SubclassOf) LINKED_STORAGE
STACK (SubclassOf) ADT
FILE_OPERATION (SubclassOf) OPERATION
SINGLE_SINGLE_SHORTEST_PATH_ALGORITHM (SubclassOf) SHORTEST_PATH_ALGORITHM
DIRECTED_GRAPH (SubclassOf) GRAPH
EXTERNAL_SORTING_ALGORITHM (SubclassOf) SORTING_ALGORITHM
ARRAY (SubclassOf) CONTINOUS_STORAGE
SET_OPERATION (SubclassOf) OPERATION
SORTING_ALGORITHM (SubclassOf) ALGORITHM
MATRIX_MULTIPLICATION_ALGORITHM (SubclassOf) ALGORITHM
SINGLY_LINKED_LIST (SubclassOf) LIST
ACYCLIC_GRAPH (SubclassOf) GRAPH
DISJOINT_SET_OPERATION (SubclassOf) OPERATION
QUEUE_OPERATION (SubclassOf) OPERATION
TREE (SubclassOf) ACYCLIC_GRAPH
DICTIONARY (SubclassOf) ADT
DYNAMIC_SET (SubclassOf) SET
TREE_SEARCH_ALGORITHM (SubclassOf) ALGORITHM
LIST_OPERATION (SubclassOf) OPERATION
UNDIRECTED_EDGE (SubclassOf) EDGE
STACK_OPERATION (SubclassOf) OPERATION
N-ARY_TREE (SubclassOf) TREE
LEAF_NODE (SubclassOf) GRAPH_NODE
GRAPH_NODE (SubclassOf) NODE
FROZEN_SET (SubclassOf) SET
DIRECTED_EDGE (SubclassOf) EDGE
##############################################################################################
##################### Superclasses classification by hermit:  ###############################
Class-name (BINARY_HEAP)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (ARRAY)= {STORAGE,CONTINOUS_STORAGE,owl:Thing,}
Class-name (CYCLIC_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (GRAPH_OPERATION)= {OPERATION,owl:Thing,}
Class-name (HASH_MAP)= {ADT,DICTIONARY,owl:Thing,}
Class-name (LOOP)= {owl:Thing,EDGE,}
Class-name (FROZEN_SET)= {ADT,SET,owl:Thing,}
Class-name (ARRAY_OPERATION)= {OPERATION,owl:Thing,}
Class-name (BINOMIAL_HEAP)= {GRAPH,MERGEABLE_HEAP,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (LEAF_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (FLOW_NETWORK_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (HEAP_OPERATION)= {GRAPH_OPERATION,OPERATION,owl:Thing,}
Class-name (SIBLING_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (QUEUE_OPERATION)= {OPERATION,owl:Thing,}
Class-name (TABLE)= {ADT,owl:Thing,}
Class-name (DISCONNECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (STACK_OPERATION)= {OPERATION,owl:Thing,}
Class-name (ADT)= {owl:Thing,}
Class-name (MERGEABLE_HEAP)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (DOUBLY_LINKED_LIST_NODE)= {LIST_NODE,NODE,owl:Thing,}
Class-name (FILE_OPERATION)= {OPERATION,owl:Thing,}
Class-name (ROOT_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (CHILD_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (DIRECTED_EDGE)= {owl:Thing,EDGE,}
Class-name (ACYCLIC_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (INTERNAL_SORTING_ALGORITHM)= {ALGORITHM,owl:Thing,SORTING_ALGORITHM,}
Class-name (HASH_TABLE)= {ADT,DICTIONARY,owl:Thing,}
Class-name (DICTIONARY)= {ADT,owl:Thing,}
Class-name (MATRIX_MULTIPLICATION_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (STATIC_SET)= {ADT,SET,owl:Thing,}
Class-name (UNDIRECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (INTERNAL_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (EDGE)= {owl:Thing,}
Class-name (GRAPH)= {ADT,owl:Thing,}
Class-name (STORAGE)= {owl:Thing,}
Class-name (GRAPH_SEARCH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (NODE)= {owl:Thing,}
Class-name (DISJOINT_SET_OPERATION)= {OPERATION,owl:Thing,}
Class-name (LIST_OPERATION)= {OPERATION,owl:Thing,}
Class-name (DOUBLY_LINKED_LIST)= {STORAGE,owl:Thing,LINKED_STORAGE,LIST,}
Class-name (STRING_MATCHING_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (DISJOINT_SET)= {ADT,owl:Thing,}
Class-name (RANDOM_ACCESS_STYLE)= {owl:Thing,ACCESS_STYLE,}
Class-name (CONVEX_HULL_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,}
Class-name (LIST)= {STORAGE,owl:Thing,LINKED_STORAGE,}
Class-name (N-ARY_TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,TREE,owl:Thing,}
Class-name (SHORTEST_PATH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (SET)= {ADT,owl:Thing,}
Class-name (SINGLY_LINKED_LIST_NODE)= {LIST_NODE,NODE,owl:Thing,}
Class-name (FIBONACCI_HEAP)= {GRAPH,MERGEABLE_HEAP,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (ALGORITHM)= {owl:Thing,}
Class-name (SINGLE_PAIR_SHORTEST_PATH_ALGORITHM)= {SHORTEST_PATH_ALGORITHM,ALGORITHM,owl:Thing,}
Class-name (SEQUENCE_SEARCH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (HEAP)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,}
Class-name (ALL_PAIRS_SHORTEST_PATH_ALGORITHM)= {SHORTEST_PATH_ALGORITHM,ALGORITHM,owl:Thing,}
Class-name (STACK)= {ADT,owl:Thing,}
Class-name (TREE_OPERATION)= {GRAPH_OPERATION,OPERATION,owl:Thing,}
Class-name (SET_OPERATION)= {OPERATION,owl:Thing,}
Class-name (BINOMIAL_TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,TREE,owl:Thing,}
Class-name (CONTINOUS_STORAGE)= {STORAGE,owl:Thing,}
Class-name (GRAPH_NODE)= {NODE,owl:Thing,}
Class-name (MUTABLE_SET)= {ADT,SET,owl:Thing,}
Class-name (SINGLY_LINKED_LIST)= {STORAGE,owl:Thing,LINKED_STORAGE,LIST,}
Class-name (TREE_SEARCH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (FILE)= {ADT,owl:Thing,}
Class-name (DYNAMIC_SET)= {ADT,SET,owl:Thing,}
Class-name (LIST_NODE)= {NODE,owl:Thing,}
Class-name (PARENT_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (CONNECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (EXTERNAL_SORTING_ALGORITHM)= {ALGORITHM,owl:Thing,SORTING_ALGORITHM,}
Class-name (ACCESS_STYLE)= {owl:Thing,}
Class-name (QUEUE)= {ADT,owl:Thing,}
Class-name (LINKED_STORAGE)= {STORAGE,owl:Thing,}
Class-name (UNWEIGHTED_EDGE)= {owl:Thing,EDGE,}
Class-name (SORTING_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (VECTOR)= {ADT,owl:Thing,}
Class-name (MINIMUM_SPANNING_TREE_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (BINARY_TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,TREE,owl:Thing,}
Class-name (OPERATION)= {owl:Thing,}
Class-name (DIRECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (UNDIRECTED_EDGE)= {owl:Thing,EDGE,}
Class-name (SEQUENTIAL_ACCESS_STYLE)= {owl:Thing,ACCESS_STYLE,}
Class-name (WEIGHTED_EDGE)= {owl:Thing,EDGE,}
Class-name (SINGLE_SINGLE_SHORTEST_PATH_ALGORITHM)= {SHORTEST_PATH_ALGORITHM,ALGORITHM,owl:Thing,}
######################################################################################################################
############## Superclasses classification by Openllet:  ########################
Class-name (BINARY_HEAP)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (ARRAY)= {STORAGE,CONTINOUS_STORAGE,owl:Thing,}
Class-name (CYCLIC_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (GRAPH_OPERATION)= {OPERATION,owl:Thing,}
Class-name (HASH_MAP)= {ADT,DICTIONARY,owl:Thing,}
Class-name (LOOP)= {owl:Thing,EDGE,}
Class-name (FROZEN_SET)= {ADT,SET,owl:Thing,}
Class-name (ARRAY_OPERATION)= {OPERATION,owl:Thing,}
Class-name (BINOMIAL_HEAP)= {GRAPH,ADT,MERGEABLE_HEAP,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (LEAF_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (FLOW_NETWORK_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (HEAP_OPERATION)= {GRAPH_OPERATION,OPERATION,owl:Thing,}
Class-name (SIBLING_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (QUEUE_OPERATION)= {OPERATION,owl:Thing,}
Class-name (TABLE)= {ADT,owl:Thing,}
Class-name (DISCONNECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (STACK_OPERATION)= {OPERATION,owl:Thing,}
Class-name (ADT)= {owl:Thing,}
Class-name (MERGEABLE_HEAP)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (DOUBLY_LINKED_LIST_NODE)= {LIST_NODE,NODE,owl:Thing,}
Class-name (FILE_OPERATION)= {OPERATION,owl:Thing,}
Class-name (ROOT_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (CHILD_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (DIRECTED_EDGE)= {owl:Thing,EDGE,}
Class-name (ACYCLIC_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (INTERNAL_SORTING_ALGORITHM)= {ALGORITHM,owl:Thing,SORTING_ALGORITHM,}
Class-name (HASH_TABLE)= {ADT,DICTIONARY,owl:Thing,}
Class-name (DICTIONARY)= {ADT,owl:Thing,}
Class-name (MATRIX_MULTIPLICATION_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (STATIC_SET)= {ADT,SET,owl:Thing,}
Class-name (UNDIRECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (INTERNAL_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (EDGE)= {owl:Thing,}
Class-name (GRAPH)= {ADT,owl:Thing,}
Class-name (STORAGE)= {owl:Thing,}
Class-name (GRAPH_SEARCH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (NODE)= {owl:Thing,}
Class-name (DISJOINT_SET_OPERATION)= {OPERATION,owl:Thing,}
Class-name (LIST_OPERATION)= {OPERATION,owl:Thing,}
Class-name (DOUBLY_LINKED_LIST)= {STORAGE,owl:Thing,LINKED_STORAGE,LIST,}
Class-name (STRING_MATCHING_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (DISJOINT_SET)= {ADT,owl:Thing,}
Class-name (RANDOM_ACCESS_STYLE)= {owl:Thing,ACCESS_STYLE,}
Class-name (CONVEX_HULL_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,}
Class-name (LIST)= {STORAGE,owl:Thing,LINKED_STORAGE,}
Class-name (N-ARY_TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,TREE,owl:Thing,}
Class-name (SHORTEST_PATH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (SET)= {ADT,owl:Thing,}
Class-name (SINGLY_LINKED_LIST_NODE)= {LIST_NODE,NODE,owl:Thing,}
Class-name (FIBONACCI_HEAP)= {GRAPH,ADT,MERGEABLE_HEAP,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,HEAP,}
Class-name (ALGORITHM)= {owl:Thing,}
Class-name (SINGLE_PAIR_SHORTEST_PATH_ALGORITHM)= {SHORTEST_PATH_ALGORITHM,ALGORITHM,owl:Thing,}
Class-name (SEQUENCE_SEARCH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (HEAP)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,owl:Thing,}
Class-name (ALL_PAIRS_SHORTEST_PATH_ALGORITHM)= {SHORTEST_PATH_ALGORITHM,ALGORITHM,owl:Thing,}
Class-name (STACK)= {ADT,owl:Thing,}
Class-name (TREE_OPERATION)= {GRAPH_OPERATION,OPERATION,owl:Thing,}
Class-name (SET_OPERATION)= {OPERATION,owl:Thing,}
Class-name (BINOMIAL_TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,TREE,owl:Thing,}
Class-name (CONTINOUS_STORAGE)= {STORAGE,owl:Thing,}
Class-name (GRAPH_NODE)= {NODE,owl:Thing,}
Class-name (MUTABLE_SET)= {ADT,SET,owl:Thing,}
Class-name (SINGLY_LINKED_LIST)= {STORAGE,owl:Thing,LINKED_STORAGE,LIST,}
Class-name (TREE_SEARCH_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (FILE)= {ADT,owl:Thing,}
Class-name (DYNAMIC_SET)= {ADT,SET,owl:Thing,}
Class-name (LIST_NODE)= {NODE,owl:Thing,}
Class-name (PARENT_NODE)= {GRAPH_NODE,NODE,owl:Thing,}
Class-name (CONNECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (EXTERNAL_SORTING_ALGORITHM)= {ALGORITHM,owl:Thing,SORTING_ALGORITHM,}
Class-name (ACCESS_STYLE)= {owl:Thing,}
Class-name (QUEUE)= {ADT,owl:Thing,}
Class-name (LINKED_STORAGE)= {STORAGE,owl:Thing,}
Class-name (UNWEIGHTED_EDGE)= {owl:Thing,EDGE,}
Class-name (SORTING_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (VECTOR)= {ADT,owl:Thing,}
Class-name (MINIMUM_SPANNING_TREE_ALGORITHM)= {ALGORITHM,owl:Thing,}
Class-name (BINARY_TREE)= {GRAPH,ADT,CONNECTED_GRAPH,ACYCLIC_GRAPH,TREE,owl:Thing,}
Class-name (OPERATION)= {owl:Thing,}
Class-name (DIRECTED_GRAPH)= {GRAPH,ADT,owl:Thing,}
Class-name (UNDIRECTED_EDGE)= {owl:Thing,EDGE,}
Class-name (SEQUENTIAL_ACCESS_STYLE)= {owl:Thing,ACCESS_STYLE,}
Class-name (WEIGHTED_EDGE)= {owl:Thing,EDGE,}
Class-name (SINGLE_SINGLE_SHORTEST_PATH_ALGORITHM)= {SHORTEST_PATH_ALGORITHM,ALGORITHM,owl:Thing,}
######################################################################
Outputs of both the reasoners are same
######################################################################
Explanation of  inconsistent Ontology....
Ontology name for inconsistency:  Stuff.owl
Inconsistency explanations...
Axioms causing the Inconsisteccy: 
ObjectPropertyDomain(<http://www.iiitd.ac.in/inconsistant#hasName> <http://www.iiitd.ac.in/inconsistant/Stuff.owl#>)
SubClassOf(<http://www.iiitd.ac.in/inconsistant/stuff.owl#stuff> ObjectSomeValuesFrom(<http://www.iiitd.ac.in/inconsistant#hasName> <http://www.iiitd.ac.in/inconsistant#E>))
DisjointClasses(<http://www.iiitd.ac.in/inconsistant/Stuff.owl#> <http://www.iiitd.ac.in/inconsistant/Stuff.owl#C> <http://www.iiitd.ac.in/inconsistant/stuff.owl#B> <http://www.iiitd.ac.in/inconsistant/stuff.owl#stuff>)
######################################################################
